openapi: 3.1.0
info:
  title: OpenSearch ML API
  description: OpenSearch ML API.
  version: 1.0.0
paths:
  /_plugins/_ml/model_groups/_register:
    post:
      operationId: ml.register_model_group.0
      x-operation-group: ml.register_model_group
      description: Registers a model group.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_model_group'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_model_group@200'
  /_plugins/_ml/model_groups/{model_group_id}:
    get:
      operationId: ml.get_model_group.0
      x-operation-group: ml.get_model_group
      description: Retrieves a model group.
      parameters:
        - $ref: '#/components/parameters/ml.get_model_group::path.model_group_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_model_group@200'
    delete:
      operationId: ml.delete_model_group.0
      x-operation-group: ml.delete_model_group
      description: Deletes a model group.
      parameters:
        - $ref: '#/components/parameters/ml.delete_model_group::path.model_group_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_model_group@200'
  /_plugins/_ml/models/_register:
    post:
      operationId: ml.register_model.0
      x-operation-group: ml.register_model
      description: Registers a model.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_model@200'
  /_plugins/_ml/models/meta:
    post:
      operationId: ml.create_model_meta.0
      x-operation-group: ml.create_model_meta
      description: Creates model metadata.
      requestBody:
        $ref: '#/components/requestBodies/ml.create_model_meta'
      responses:
        '200':
          $ref: '#/components/responses/ml.create_model_meta@200'
  /_plugins/_ml/models/_upload:
    post:
      operationId: ml.upload_model.0
      x-operation-group: ml.upload_model
      deprecated: true
      x-version-deprecated: 2.7.0
      x-deprecation-message: Use `register_model` instead.
      description: Registers a model.
      requestBody:
        $ref: '#/components/requestBodies/ml.upload_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.upload_model@200'
  /_plugins/_ml/models/{model_id}:
    get:
      operationId: ml.get_model.0
      x-operation-group: ml.get_model
      description: Retrieves a model.
      parameters:
        - $ref: '#/components/parameters/ml.get_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_model@200'
    put:
      operationId: ml.update_model.0
      x-operation-group: ml.update_model
      description: Updates a model.
      parameters:
        - $ref: '#/components/parameters/ml.update_model::path.model_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.update_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.update_model@200'
    delete:
      operationId: ml.delete_model.0
      x-operation-group: ml.delete_model
      description: Deletes a model.
      parameters:
        - $ref: '#/components/parameters/ml.delete_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_model@200'
  /_plugins/_ml/models/{model_id}/_deploy:
    post:
      operationId: ml.deploy_model.0
      x-operation-group: ml.deploy_model
      description: Deploys a model.
      parameters:
        - $ref: '#/components/parameters/ml.deploy_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.deploy_model@200'
  /_plugins/_ml/models/{model_id}/_load:
    post:
      operationId: ml.load_model.0
      x-operation-group: ml.load_model
      deprecated: true
      x-version-deprecated: 2.7.0
      x-deprecation-message: Use `deploy_model` instead.
      description: Deploys a model.
      parameters:
        - $ref: '#/components/parameters/ml.load_model::path.model_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.load_model@200'
  /_plugins/_ml/models/{model_id}/_undeploy:
    post:
      operationId: ml.undeploy_model.0
      x-operation-group: ml.undeploy_model
      description: Undeploys a model.
      parameters:
        - $ref: '#/components/parameters/ml.undeploy_model::path.model_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.undeploy_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.undeploy_model@200'
  /_plugins/_ml/models/_undeploy:
    post:
      operationId: ml.undeploy_model.1
      x-operation-group: ml.undeploy_model
      description: Undeploys a model.
      requestBody:
        $ref: '#/components/requestBodies/ml.undeploy_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.undeploy_model@200'
  /_plugins/_ml/models/{model_id}/_unload:
    post:
      operationId: ml.unload_model.0
      x-operation-group: ml.unload_model
      deprecated: true
      x-version-deprecated: 2.7.0
      x-deprecation-message: Use `undeploy_model` instead.
      description: Unloads a model.
      parameters:
        - $ref: '#/components/parameters/ml.unload_model::path.model_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.unload_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.unload_model@200'
  /_plugins/_ml/models/_unload:
    post:
      operationId: ml.unload_model.1
      x-operation-group: ml.unload_model
      deprecated: true
      x-version-deprecated: 2.7.0
      x-deprecation-message: Use `undeploy_model` instead.
      description: Unloads a model.
      requestBody:
        $ref: '#/components/requestBodies/ml.unload_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.unload_model@200'
  /_plugins/_ml/models/{model_id}/_predict:
    post:
      operationId: ml.predict_model.0
      x-operation-group: ml.predict_model
      description: Predicts a model.
      parameters:
        - $ref: '#/components/parameters/ml.predict_model::path.model_id'
      requestBody:
        $ref: '#/components/requestBodies/ml.predict_model'
      responses:
        '200':
          $ref: '#/components/responses/ml.predict_model@200'
  /_plugins/_ml/tasks/{task_id}:
    get:
      operationId: ml.get_task.0
      x-operation-group: ml.get_task
      description: Retrieves a task.
      parameters:
        - $ref: '#/components/parameters/ml.get_task::path.task_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.get_task@200'
    delete:
      operationId: ml.delete_task.0
      x-operation-group: ml.delete_task
      description: Deletes a task.
      parameters:
        - $ref: '#/components/parameters/ml.delete_task::path.task_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_task@200'
  /_plugins/_ml/models/_search:
    get:
      operationId: ml.search_models.0
      x-operation-group: ml.search_models
      description: Searches for models.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_models'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_models@200'
    post:
      operationId: ml.search_models.1
      x-operation-group: ml.search_models
      description: Searches for models.
      requestBody:
        $ref: '#/components/requestBodies/ml.search_models'
      responses:
        '200':
          $ref: '#/components/responses/ml.search_models@200'
  /_plugins/_ml/connectors/_create:
    post:
      operationId: ml.create_connector.0
      x-operation-group: ml.create_connector
      description: Creates a standalone connector.
      requestBody:
        $ref: '#/components/requestBodies/ml.create_connector'
      responses:
        '200':
          $ref: '#/components/responses/ml.create_connector@200'
  /_plugins/_ml/connectors/{connector_id}:
    delete:
      operationId: ml.delete_connector.0
      x-operation-group: ml.delete_connector
      description: Deletes a standalone connector.
      parameters:
        - $ref: '#/components/parameters/ml.delete_connector::path.connector_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_connector@200'
  /_plugins/_ml/agents/_register:
    post:
      operationId: ml.register_agents.0
      x-operation-group: ml.register_agents
      description: Register an agent.
      requestBody:
        $ref: '#/components/requestBodies/ml.register_agents'
      responses:
        '200':
          $ref: '#/components/responses/ml.register_agents@200'
  /_plugins/_ml/agents/{agent_id}:
    delete:
      operationId: ml.delete_agent.0
      x-operation-group: ml.delete_agent
      description: Delete an agent.
      parameters:
        - $ref: '#/components/parameters/ml.delete_agent::path.agent_id'
      responses:
        '200':
          $ref: '#/components/responses/ml.delete_agent@200'
components:
  requestBodies:
    ml.register_model_group:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model group name.
              description:
                type: string
                description: The model group description.
              access_mode:
                type: string
                description: The model group access mode.
                enum: [private, public, restricted]
              backend_roles:
                type: array
                items:
                  type: string
                description: The backend roles.
              add_all_backend_roles:
                type: boolean
                description: The add all backend roles.
            required:
              - name
    ml.register_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model name.
              version:
                $ref: '../schemas/_common.yaml#/components/schemas/VersionString'
              model_format:
                $ref: '../schemas/_common.yaml#/components/schemas/ModelFormat'
              description:
                type: string
                description: The model description.
              model_group_id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
            required:
              - name
              - version
    ml.create_model_meta:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model name.
              version:
                $ref: '../schemas/_common.yaml#/components/schemas/VersionString'
              model_format:
                $ref: '../schemas/_common.yaml#/components/schemas/ModelFormat'
              model_group_id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
              model_content_hash_value:
                type: string
                description: The model content hash value.
              model_config:
                $ref: '../schemas/ml._common.yaml#/components/schemas/ModelConfig'
              total_chunks:
                type: integer
                format: int64
                description: Number of chunks the model is split into.
              url:
                type: string
                description: The model URL.
              description:
                type: string
                description: The model description.
            required:
              - model_config
              - model_content_hash_value
              - model_format
              - name
              - total_chunks
              - version
    ml.upload_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The model name.
              version:
                $ref: '../schemas/_common.yaml#/components/schemas/VersionString'
              model_format:
                $ref: '../schemas/_common.yaml#/components/schemas/ModelFormat'
              description:
                type: string
                description: The model description.
              model_group_id:
                $ref: '../schemas/_common.yaml#/components/schemas/Id'
            required:
              - name
              - version
    ml.search_models:
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: object
                # TODO: Define the query schema
                description: The query.
              size:
                type: integer
                description: The number of models to return.
            required:
              - query
              - size
    ml.update_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              connector:
                type: object
                description: The connector to use for the model.
              connector_id:
                type: string
                description: The connector ID.
              is_enabled:
                type: boolean
                description: Whether the model is enabled.
              description: 
                type: string
                description: The model description.
              model_config:
                $ref: '../schemas/ml._common.yaml#/components/schemas/ModelConfig'
              name:
                type: string
                description: The model name.
              rate_limiter:
                $ref: '../schemas/ml._common.yaml#/components/schemas/RateLimiter'
              guardrails:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Guardrails'
              interface:
                type: object
                description: The model interface.
    ml.undeploy_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              node_ids:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/Id'
              model_ids:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/Id'
            required:
              - model_ids
    ml.unload_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              node_ids:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/Id'
              model_ids:
                type: array
                items:
                  $ref: '../schemas/_common.yaml#/components/schemas/Id'
            required:
              - model_ids
    ml.predict_model:
      content:
        application/json:
          schema:
            type: object
            properties:
              query_text:
                type: string
                description: The query text.
              text_docs:
                type: array
                items:
                  type: string
                description: The text documents.
            required:
              - text_docs
    ml.create_connector:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              version:
                type: integer
              protocol:
                type: string
              credential:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Credential'
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Parameters'
              client_config:
                $ref: '../schemas/ml._common.yaml#/components/schemas/ClientConfig'
              actions:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/Action'
            required:
              - actions
              - credential
              - description
              - name
              - parameters
              - protocol
              - version
    ml.register_agents:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              description:
                type: string
              tools:
                type: array
                items:
                  $ref: '../schemas/ml._common.yaml#/components/schemas/ToolItems'
              parameters:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Parameters'
              app_type:
                type: string
              memory:
                $ref: '../schemas/ml._common.yaml#/components/schemas/Memory'
              llm:
                $ref: '../schemas/ml._common.yaml#/components/schemas/LLM'
            required:
              - name
              - type
  responses:
    ml.register_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/ModelGroupRegistration'
    ml.get_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/ModelGroup'
    ml.delete_model_group@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.register_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
            required:
              - status
              - task_id
    ml.create_model_meta@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              model_id:
                type: string
            required:
              - model_id
              - status
    ml.upload_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
            required:
              - status
              - task_id
    ml.deploy_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
              task_type:
                type: string
            required:
              - status
              - task_id
    ml.load_model@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              task_id:
                type: string
              task_type:
                type: string
                enum:
                  - BATCH_INGEST
                  - BATCH_PREDICTION
                  - DEPLOY_MODEL
                  - EXECUTION
                  - PREDICTION
                  - REGISTER_MODEL
                  - TRAINING
                  - TRAINING_AND_PREDICTION
            required:
              - status
              - task_id
              - task_type
    ml.undeploy_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/UndeployModelResponse'
    ml.unload_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/UnloadModelResponse'
    ml.predict_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/PredictModelResponse'
    ml.delete_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.get_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/Model'
    ml.update_model@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/UpdateModelResponse'
    ml.delete_task@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.get_task@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/Task'
    ml.search_models@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/ml._common.yaml#/components/schemas/SearchModelsResponse'
    ml.create_connector@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              connector_id:
                type: string
    ml.delete_connector@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
    ml.register_agents@200:
      content:
        application/json:
          schema:
            type: object
            properties:
              agent_id:
                type: string
    ml.delete_agent@200:
      content:
        application/json:
          schema:
            $ref: '../schemas/_common.yaml#/components/schemas/WriteResponseBase'
  parameters:
    ml.get_model_group::path.model_group_id:
      name: model_group_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_model_group::path.model_group_id:
      name: model_group_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.get_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.update_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.deploy_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.load_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.undeploy_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.unload_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.predict_model::path.model_id:
      name: model_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_task::path.task_id:
      name: task_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_connector::path.connector_id:
      name: connector_id
      in: path
      required: true
      schema:
        type: string
    ml.delete_agent::path.agent_id:
      name: agent_id
      in: path
      required: true
      schema:
        type: string
    ml.get_task::path.task_id:
      name: task_id
      in: path
      required: true
      schema:
        type: string